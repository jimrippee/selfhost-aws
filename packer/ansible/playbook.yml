---
- name: Provision AWS EC2 AMI with Vector, Tailscale, and AWS SSM Agent
  hosts: all
  become: true

  roles:
    - ansibleadmin
    - geerlingguy.docker

  vars:
    keyring_path: /etc/apt/keyrings
    vector_keyring_path: "{{ keyring_path }}/vector-archive-keyring.gpg"
    tailscale_keyring_path: "{{ keyring_path }}/tailscale-archive-keyring.gpg"
    distro_codename: "{{ ansible_facts['lsb']['codename'] | default('bookworm') }}"
    datadog_keys:
      - DATADOG_APT_KEY_CURRENT.public
      - DATADOG_APT_KEY_C0962C7D.public
      - DATADOG_APT_KEY_F14F620E.public
    aws_region: us-west-1  # Change as needed
    docker_users:
      - ansibleadmin

  pre_tasks:
    - name: Ensure keyrings directory exists
      ansible.builtin.file:
        path: "{{ keyring_path }}"
        state: directory
        mode: '0755'

    - name: Ensure dependencies for HTTPS repositories are present
      ansible.builtin.apt:
        name:
          - curl
          - gnupg
          - ca-certificates
          - lsb-release
        state: present
        update_cache: yes

  tasks:
    #######################################################################
    # Vector (Datadog keys -> single dearmored keyring)
    #######################################################################
    - name: Download Datadog APT public keys (ASCII-armored)
      ansible.builtin.get_url:
        url: "https://keys.datadoghq.com/{{ item }}"
        dest: "/tmp/{{ item }}"
        mode: '0644'
      loop: "{{ datadog_keys }}"
      register: datadog_key_downloads

    - name: Check if Vector keyring exists
      ansible.builtin.stat:
        path: "{{ vector_keyring_path }}"
      register: vector_keyring_stat

    - name: Decide if we must rebuild the dearmored keyring
      ansible.builtin.set_fact:
        rebuild_vector_keyring: "{{ (not vector_keyring_stat.stat.exists) or ((datadog_key_downloads.results | selectattr('changed') | list | length) > 0) }}"

    - name: Build/update dearmored Vector/Datadog keyring (atomic, dash-compatible)
      ansible.builtin.shell: |
        set -eu
        cat /tmp/DATADOG_APT_KEY_*.public > /tmp/datadog.keys
        gpg --dearmor --yes --output "{{ vector_keyring_path }}.tmp" /tmp/datadog.keys
        chmod 0644 "{{ vector_keyring_path }}.tmp"
        mv "{{ vector_keyring_path }}.tmp" "{{ vector_keyring_path }}"
      when: rebuild_vector_keyring | bool

    # ðŸ‘‡ FIXED: correct component is 'vector-0' (not 'main')
    - name: Add Vector APT repository with signed-by
      ansible.builtin.apt_repository:
        repo: "deb [signed-by={{ vector_keyring_path }}] https://apt.vector.dev/ stable vector-0"
        filename: vector
        state: present
        update_cache: yes

    - name: Install Vector
      ansible.builtin.apt:
        name: vector
        state: present

    #######################################################################
    # Tailscale (official key and repo)
    #######################################################################
    - name: Ensure Tailscale key exists (download pre-dearmored key)
      ansible.builtin.get_url:
        url: "https://pkgs.tailscale.com/stable/debian/{{ distro_codename }}.noarmor.gpg"
        dest: "{{ tailscale_keyring_path }}"
        mode: '0644'
        force: false

    - name: Add Tailscale APT repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by={{ tailscale_keyring_path }} arch=amd64] https://pkgs.tailscale.com/stable/debian {{ distro_codename }} main"
        filename: tailscale
        state: present
        update_cache: yes

    - name: Install Tailscale
      ansible.builtin.apt:
        name: tailscale
        state: present

    - name: Enable and start tailscaled
      ansible.builtin.systemd:
        name: tailscaled
        enabled: yes
        state: started

    #######################################################################
    # AWS SSM Agent
    #######################################################################      

    - name: Download SSM agent .deb
      ansible.builtin.get_url:
        url: "https://amazon-ssm-{{ aws_region }}.s3.{{ aws_region }}.amazonaws.com/latest/debian_amd64/amazon-ssm-agent.deb"
        dest: "/tmp/amazon-ssm-agent.deb"
        mode: '0644'

    - name: Install SSM agent .deb package
      ansible.builtin.apt:
        deb: "/tmp/amazon-ssm-agent.deb"
        state: present

    - name: Enable and start SSM agent
      ansible.builtin.systemd:
        name: amazon-ssm-agent
        enabled: yes
        state: started

  post_tasks:
    - name: Remove temporary downloaded Datadog key files from /tmp
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: "{{ datadog_keys | map('regex_replace', '^(.*)$', '/tmp/\\1') | list }}"
      when: datadog_key_downloads is defined

    - name: Show APT policy for Vector (debug only)
      ansible.builtin.command: apt-cache policy vector
      register: apt_vector
      changed_when: false
      failed_when: false

    - name: Debug Vector policy output (optional)
      ansible.builtin.debug:
        var: apt_vector.stdout_lines
      when: apt_vector.stdout is defined
